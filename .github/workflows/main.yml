name: todo app infra

run-name: terraform init plan & apply to ${{ inputs.environments }} by @${{ github.actor }}

on:
  push:
    branches:
      - main
    paths-ignore:
      - "README.md"
  pull_request:
    branches:
      - main
      - 'features/*'
  workflow_dispatch:
    inputs:
      environments:
        description: "select environments"
        required: true
        default: dev
        type: choice
        options: [dev, qa, prod]

jobs:
  Scanning:
    name: Scanning Job
    runs-on: jeet-runner
    environment: dev
    steps:
      - name: Clone Repo
        uses: actions/checkout@v3

      - name: Tfsec Scanning
        run: |
          echo "üîç Running Tfsec Scanning...."
          tfsec .

      - name: Checkov Scanning
        run: |
          echo "üîç Running Checkov Scanning...."
          checkov -d

      - name: Trivy Scanning
        run: |
          echo "üîç Running Trivy Scanning...."
          trivy config --terraform .

  Terraform:
    name: Terraform Deploy
    runs-on: jeet-runner
    needs: Scanning
    environment: ${{ github.event.inputs.environments }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      # Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.7.5

      # Azure Login (Service Principal)
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Terraform Init
      - name: Terraform Init
        run: |
          echo "üöÄ Running terraform init..."
          terraform init -backend-config="resource_group_name=${{ secrets.STATE_RG }}" \
                         -backend-config="storage_account_name=${{ secrets.STATE_STORAGE }}" \
                         -backend-config="container_name=${{ secrets.STATE_CONTAINER }}" \
                         -backend-config="key=${{ github.event.inputs.environments }}.tfstate"

      # Terraform Validate
      - name: Terraform Validate
        run: |
          terraform validate

      # Terraform Plan
      - name: Terraform Plan
        run: |
          terraform plan -var-file="environments/${{ github.event.inputs.environments }}.tfvars" -out=tfplan

      # Terraform Apply (only on push, not PR)
      - name: Terraform Apply
        if: github.event_name == 'push'
        run: |
          terraform apply -auto-approve tfplan
